#!/usr/bin/env python3
# main.py

import os
import sys
import argparse
from modules.pentest_modules import PentestModules

class KaliAIAssistant:
    def __init__(self):
        self.modules = PentestModules()
        self.banner = """
        üöÄ Kali AI Assistant v1.0
        ü§ñ –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –ø–µ–Ω—Ç–µ—Å—Ç–∞ —Å –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–º –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–æ–º
        """
    
    def print_menu(self):
        print(self.banner)
        print("–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:")
        print("1.  create-project <name>    - –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç")
        print("2.  scan <target>           - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ")
        print("3.  web-scan <url>          - –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
        print("4.  network-scan <ip>       - –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ç–∏")
        print("5.  interactive             - –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º")
        print("6.  help                    - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É")
        print("7.  exit                    - –í—ã—Ö–æ–¥")
    
    def interactive_mode(self):
        """–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º"""
        print("üîç –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º –∑–∞–ø—É—â–µ–Ω!")
        print("–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—ã –∏–ª–∏ 'back' –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞")
        
        while True:
            try:
                user_input = input("\nAI> ").strip()
                
                if user_input in ['exit', 'quit', 'back']:
                    break
                elif user_input.startswith('scan '):
                    target = user_input[5:]
                    self.modules.automated_scan(target)
                elif user_input.startswith('create-project '):
                    name = user_input[15:]
                    self.modules.create_project(name)
                elif user_input == 'help':
                    self.print_menu()
                else:
                    print("–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: scan <target> –∏–ª–∏ create-project <name>")
                    
            except KeyboardInterrupt:
                break
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞: {e}")

def main():
    assistant = KaliAIAssistant()
    
    if len(sys.argv) == 1:
        assistant.interactive_mode()
        return
    
    parser = argparse.ArgumentParser(description="Kali AI Assistant")
    parser.add_argument('command', help='–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è')
    parser.add_argument('target', nargs='?', help='–¶–µ–ª—å –¥–ª—è —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è')
    
    args = parser.parse_args()
    
    if args.command == "create-project" and args.target:
        assistant.modules.create_project(args.target)
    elif args.command == "scan" and args.target:
        assistant.modules.automated_scan(args.target)
    elif args.command == "interactive":
        assistant.interactive_mode()
    else:
        assistant.print_menu()

if __name__ == "__main__":
    main()
