#!/usr/bin/env python3
# modules/pentest_modules.py

import os
import time
from core.ai_engine import KaliAIEngine

class PentestModules:
    def __init__(self):
        self.ai = KaliAIEngine()
        self.results = {}
    
    def create_project(self, project_name):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞"""
        structure = {
            "scans": ["nmap", "nikto", "dirb"],
            "exploits": ["metasploit", "sqlmap"],
            "logs": ["commands", "results"],
            "reports": ["html", "pdf"]
        }
        
        for folder, subfolders in structure.items():
            path = f"{project_name}/{folder}"
            os.makedirs(path, exist_ok=True)
            
            for sub in subfolders:
                os.makedirs(f"{path}/{sub}", exist_ok=True)
        
        print(f"‚úÖ –ü—Ä–æ–µ–∫—Ç '{project_name}' —Å–æ–∑–¥–∞–Ω!")
        return project_name
    
    def automated_scan(self, target, scan_type="full"):
        """–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ"""
        print(f"üéØ –ù–∞—á–∏–Ω–∞–µ–º —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ: {target}")
        
        # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —É AI –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
        ai_prompt = f"—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ {target} —Ç–∏–ø {scan_type}"
        ai_commands = self.ai.ask_ai(ai_prompt)
        
        commands = []
        for line in ai_commands.split('\n'):
            if line.strip() and any(cmd in line for cmd in ['nmap', 'nikto', 'dirb', 'gobuster']):
                commands.append(line.strip())
        
        # –ï—Å–ª–∏ AI –Ω–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–ª –∫–æ–º–∞–Ω–¥—ã, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ
        if not commands:
            commands = [
                f"nmap -sV -sC -O {target}",
                f"nikto -h http://{target}",
                f"dirb http://{target} /usr/share/wordlists/dirb/common.txt -o scans/dirb_{target}.txt"
            ]
        
        # –í—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–º–∞–Ω–¥—ã
        for cmd in commands:
            print(f"üîß –í—ã–ø–æ–ª–Ω—è—é: {cmd}")
            result = self.ai.execute_command(cmd)
            
            if isinstance(result, dict):
                print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç: {len(result['stdout'])} —Å–∏–º–≤–æ–ª–æ–≤")
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
                with open(f"logs/scan_{target}.txt", "a") as f:
                    f.write(f"=== {cmd} ===\n")
                    f.write(result['stdout'])
                    f.write("\n" + "="*50 + "\n")
            
            time.sleep(2)  # –ü–∞—É–∑–∞ –º–µ–∂–¥—É –∫–æ–º–∞–Ω–¥–∞–º–∏
        
        print("‚úÖ –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
